"use strict";(self.webpackChunklele_docs=self.webpackChunklele_docs||[]).push([[541],{6878:(e,a,n)=>{n.r(a),n.d(a,{data:()=>s});const s={key:"v-2c8e7398",path:"/guide/npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",title:"npm常用命令",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"npm常用命令",description:"记录一些npm遇到的问题,方便下次查找"},excerpt:"",headers:[{level:3,title:"npm常用命令",slug:"npm常用命令",children:[]}],filePathRelative:"guide/npm常用命令.md",git:{}}},2424:(e,a,n)=>{n.r(a),n.d(a,{default:()=>p});const s=(0,n(6252).uE)('<h3 id="npm常用命令" tabindex="-1"><a class="header-anchor" href="#npm常用命令" aria-hidden="true">#</a> npm常用命令</h3><h4 id="升级npm" tabindex="-1"><a class="header-anchor" href="#升级npm" aria-hidden="true">#</a> 升级npm</h4><div class="language-typescript ext-ts"><pre class="language-typescript"><code>npm <span class="token constant">WARN</span> read<span class="token operator">-</span>shrinkwrap This version <span class="token keyword">of</span> npm <span class="token keyword">is</span> compatible <span class="token keyword">with</span> lockfileVersion<span class="token decorator"><span class="token at operator">@</span><span class="token function">1</span></span>\n</code></pre></div><div class="language-typescript ext-ts"><pre class="language-typescript"><code>npm install <span class="token operator">-</span>g npm\n</code></pre></div><h4 id="降级npm" tabindex="-1"><a class="header-anchor" href="#降级npm" aria-hidden="true">#</a> 降级npm</h4><div class="language-typescript ext-ts"><pre class="language-typescript"><code>npm error <span class="token constant">ERESOLVE</span> unable to resolve dependency tree\n</code></pre></div><div class="language-typescript ext-ts"><pre class="language-typescript"><code>sudo npm install npm<span class="token decorator"><span class="token at operator">@</span><span class="token function">4</span></span> <span class="token operator">-</span>g\n</code></pre></div><hr><p>permalinkPattern: :year/:month/:day/:npmIssues.html</p><hr>',10),t={},p=(0,n(3744).Z)(t,[["render",function(e,a){return s}]])},3744:(e,a)=>{a.Z=(e,a)=>{const n=e.__vccOpts||e;for(const[e,s]of a)n[e]=s;return n}}}]);